{"version":3,"sources":["components/gameboard/position/Position.js","components/gameboard/Gameboard.js","components/message/Message.js","components/navbar/Navbar.js","components/player/Player.js","App.js","index.js"],"names":["Position","index","board","setBoard","currentPlayer","nextPlayer","nextTurn","setPos","checkWinner","setMessage","endGame","className","onClick","mark","newBoard","marker","playerId","id","name","Gameboard","setPos_0","setPos_1","setPos_2","setPos_3","setPos_4","setPos_5","setPos_6","setPos_7","setPos_8","positionSetters","setEmptySpaces","map","i","Message","message","Navbar","resetGame","Player","player","setPlayerName","checkMarker","score","type","maxLength","placeholder","value","onChange","e","target","App","useState","player1Name","setPlayer1Name","player2Name","setPlayer2Name","player1Marker","setPlayer1Marker","player2Marker","setPlayer2Marker","player1Score","setPlayer1Score","player2Score","setPlayer2Score","player1","player2","turn","setTurn","round","setRound","setCurrentPlayer","setNextPlayer","isRoundOver","setIsRoundOver","isPlaying","setIsPlaying","vsCPU","setVsCPU","cpuTurnMod","setCpuTurnMod","pos_0","pos_1","pos_2","pos_3","pos_4","pos_5","pos_6","pos_7","pos_8","scoreboard","setScoreboard","pos","useEffect","updateBoardAfterCPUmove","tie","resetBoard","fieldIndex","filter","winCombo","includes","parseInt","some","posibleWinCombos","every","setTimeout","getCpuMove","possibleMoves","length","push","Math","floor","random","newMark","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b77df6c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./position.scss\";\r\n\r\nexport default function Position({\r\n  index,\r\n  board,\r\n  setBoard,\r\n  currentPlayer,\r\n  nextPlayer,\r\n  nextTurn,\r\n  setPos,\r\n  checkWinner,\r\n  setMessage,\r\n  endGame,\r\n}) {\r\n  const handleClick = () => {\r\n    // check if already played\r\n    if (board[index].mark !== \"\") {\r\n      return;\r\n    }\r\n    let newBoard = [...board];\r\n    newBoard[index].mark = currentPlayer.marker;\r\n    newBoard[index].playerId = currentPlayer.id;\r\n    setBoard(newBoard);\r\n    setPos(currentPlayer);\r\n    if (checkWinner(index)) {\r\n      endGame();\r\n      return;\r\n    } else {\r\n      setMessage(`${nextPlayer.name}'s turn`);\r\n      nextTurn();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"position-container\" onClick={handleClick}>\r\n      <span className=\"marker\">{board[index].mark}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./gameboard.scss\";\r\nimport Position from \"./position/Position\";\r\n\r\nexport default function Gameboard({\r\n  board,\r\n  setBoard,\r\n  currentPlayer,\r\n  nextPlayer,\r\n  nextTurn,\r\n  setPos_0,\r\n  setPos_1,\r\n  setPos_2,\r\n  setPos_3,\r\n  setPos_4,\r\n  setPos_5,\r\n  setPos_6,\r\n  setPos_7,\r\n  setPos_8,\r\n  checkWinner,\r\n  setMessage,\r\n  endGame,\r\n  setEmptySpaces,\r\n}) {\r\n  const indexes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n  const positionSetters = [\r\n    setPos_0,\r\n    setPos_1,\r\n    setPos_2,\r\n    setPos_3,\r\n    setPos_4,\r\n    setPos_5,\r\n    setPos_6,\r\n    setPos_7,\r\n    setPos_8,\r\n  ];\r\n\r\n  return (\r\n    <div className=\"gameboard\">\r\n      {indexes.map((i) => {\r\n        return (\r\n          <Position\r\n            index={i}\r\n            key={i}\r\n            board={board}\r\n            setBoard={setBoard}\r\n            currentPlayer={currentPlayer}\r\n            nextPlayer={nextPlayer}\r\n            nextTurn={nextTurn}\r\n            setPos={positionSetters[i]}\r\n            checkWinner={checkWinner}\r\n            setMessage={setMessage}\r\n            endGame={endGame}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./message.scss\";\r\n\r\nexport default function Message({ message }) {\r\n  return (\r\n    <div className=\"message-container\">\r\n      <span className=\"message\">{message}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./navbar.scss\";\r\n\r\nexport default function Navbar({ resetGame }) {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <span onClick={() => resetGame()}>Tic Tac Toe</span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./player.scss\";\r\n\r\nexport default function Player({ player, setPlayerName, checkMarker }) {\r\n  const { id, name, marker, score } = player;\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <input\r\n        className=\"player-name\"\r\n        type=\"text\"\r\n        maxLength=\"10\"\r\n        name=\"\"\r\n        placeholder={name}\r\n        value={name}\r\n        onChange={(e) => setPlayerName(e.target.value)}\r\n      ></input>\r\n      <span className=\"colon\">:</span>\r\n      <input\r\n        className=\"marker\"\r\n        type=\"text\"\r\n        maxLength=\"1\"\r\n        name=\"\"\r\n        placeholder={marker}\r\n        value={marker}\r\n        onChange={(e) => checkMarker(id, e.target.value)}\r\n      ></input>\r\n      <span className=\"score\">{score}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport \"./app.scss\";\nimport Gameboard from \"./components/gameboard/Gameboard\";\nimport Message from \"./components/message/Message\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Player from \"./components/player/Player\";\n\nfunction App() {\n  const [player1Name, setPlayer1Name] = useState(\"Player 1\");\n  const [player2Name, setPlayer2Name] = useState(\"Player 2\");\n  const [player1Marker, setPlayer1Marker] = useState(\"X\");\n  const [player2Marker, setPlayer2Marker] = useState(\"O\");\n  const [player1Score, setPlayer1Score] = useState(0);\n  const [player2Score, setPlayer2Score] = useState(0);\n\n  const player1 = {\n    id: 1,\n    name: player1Name,\n    marker: player1Marker,\n    score: player1Score,\n  };\n  const player2 = {\n    id: 2,\n    name: player2Name,\n    marker: player2Marker,\n    score: player2Score,\n  };\n\n  const [turn, setTurn] = useState(1);\n  const [round, setRound] = useState(1);\n  const [currentPlayer, setCurrentPlayer] = useState(player1);\n  const [nextPlayer, setNextPlayer] = useState(player2);\n  const [isRoundOver, setIsRoundOver] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [vsCPU, setVsCPU] = useState(false);\n  const [cpuTurnMod, setCpuTurnMod] = useState(0);\n  const [pos_0, setPos_0] = useState(\"\");\n  const [pos_1, setPos_1] = useState(\"\");\n  const [pos_2, setPos_2] = useState(\"\");\n  const [pos_3, setPos_3] = useState(\"\");\n  const [pos_4, setPos_4] = useState(\"\");\n  const [pos_5, setPos_5] = useState(\"\");\n  const [pos_6, setPos_6] = useState(\"\");\n  const [pos_7, setPos_7] = useState(\"\");\n  const [pos_8, setPos_8] = useState(\"\");\n  const [message, setMessage] = useState(\"Player 1's turn\");\n  const [scoreboard, setScoreboard] = useState(\"\");\n  const [board, setBoard] = useState([\n    { pos: 0, mark: pos_0, playerId: \"\" },\n    { pos: 1, mark: pos_1, playerId: \"\" },\n    { pos: 2, mark: pos_2, playerId: \"\" },\n    { pos: 3, mark: pos_3, playerId: \"\" },\n    { pos: 4, mark: pos_4, playerId: \"\" },\n    { pos: 5, mark: pos_5, playerId: \"\" },\n    { pos: 6, mark: pos_6, playerId: \"\" },\n    { pos: 7, mark: pos_7, playerId: \"\" },\n    { pos: 8, mark: pos_8, playerId: \"\" },\n  ]);\n\n  useEffect(() => {\n    if (player1Score === player2Score) {\n      setScoreboard(`Tied ${player1Score} - ${player2Score}`);\n    } else if (player1Score > player2Score) {\n      setScoreboard(`${player1Name} leads ${player1Score} - ${player2Score}`);\n    } else {\n      setScoreboard(`${player2Name} leads ${player2Score} - ${player1Score}`);\n    }\n  }, [player1Score, player2Score, player1Name, player2Name]);\n\n  const updateBoardAfterCPUmove = (i) => {\n    let newBoard = [...board];\n    newBoard[i].mark = player2.marker;\n    newBoard[i].playerId = player2.id;\n    setBoard(newBoard);\n    if (checkWinner(i)) {\n      endGame();\n      return;\n    } else {\n      setMessage(`${nextPlayer.name}'s turn`);\n      nextTurn();\n    }\n  };\n\n  const nextTurn = () => {\n    turn < 9 ? setTurn(turn + 1) : endGame(true);\n    if (currentPlayer.id === 1) {\n      setCurrentPlayer(player2);\n      setNextPlayer(player1);\n    } else {\n      setCurrentPlayer(player1);\n      setNextPlayer(player2);\n    }\n  };\n\n  const endGame = (tie) => {\n    if (tie) {\n      setMessage(`It's a tie!`);\n      setIsRoundOver(true);\n      setRound(round + 1);\n      return;\n    }\n    setMessage(`${currentPlayer.name} wins!`);\n    currentPlayer.id === 1\n      ? setPlayer1Score(player1Score + 1)\n      : setPlayer2Score(player2Score + 1);\n    setIsRoundOver(true);\n    setRound(round + 1);\n  };\n\n  useEffect(() => {\n    if (round % 2 === 0) {\n      setCpuTurnMod(1);\n    } else {\n      setCpuTurnMod(0);\n    }\n  }, [round]);\n\n  const resetBoard = () => {\n    setTurn(1);\n    setBoard([\n      { pos: 0, mark: \"\", playerId: \"\" },\n      { pos: 1, mark: \"\", playerId: \"\" },\n      { pos: 2, mark: \"\", playerId: \"\" },\n      { pos: 3, mark: \"\", playerId: \"\" },\n      { pos: 4, mark: \"\", playerId: \"\" },\n      { pos: 5, mark: \"\", playerId: \"\" },\n      { pos: 6, mark: \"\", playerId: \"\" },\n      { pos: 7, mark: \"\", playerId: \"\" },\n      { pos: 8, mark: \"\", playerId: \"\" },\n    ]);\n    setPos_0(\"\");\n    setPos_1(\"\");\n    setPos_2(\"\");\n    setPos_3(\"\");\n    setPos_4(\"\");\n    setPos_5(\"\");\n    setPos_6(\"\");\n    setPos_7(\"\");\n    setPos_8(\"\");\n    if (round % 2 === 1) {\n      setCurrentPlayer(player1);\n      setNextPlayer(player2);\n    } else {\n      setCurrentPlayer(player2);\n      setNextPlayer(player1);\n    }\n  };\n\n  const checkWinner = (fieldIndex) => {\n    const winConditions = [\n      [0, 1, 2],\n      [0, 3, 6],\n      [0, 4, 8],\n      [1, 4, 7],\n      [2, 5, 8],\n      [2, 4, 6],\n      [3, 4, 5],\n      [6, 7, 8],\n    ];\n\n    return winConditions\n      .filter((winCombo) => winCombo.includes(parseInt(fieldIndex)))\n      .some((posibleWinCombos) =>\n        posibleWinCombos.every(\n          (index) => board[index].playerId === currentPlayer.id\n        )\n      );\n  };\n\n  const startGame = () => {\n    setIsPlaying(true);\n    setIsRoundOver(false);\n    setVsCPU(false);\n    setCurrentPlayer(player1);\n    resetBoard();\n    setPlayer2Name(\"Player 2\");\n    setNextPlayer(player2);\n    setRound(1);\n  };\n\n  const resetGame = () => {\n    setIsPlaying(false);\n    setPlayer1Score(0);\n    setPlayer2Score(0);\n    resetBoard();\n    setCurrentPlayer(player1);\n    setMessage(`${player1.name}'s turn`);\n  };\n\n  const nextRound = () => {\n    resetBoard();\n    setIsRoundOver(false);\n    setMessage(`${nextPlayer.name}'s turn`);\n  };\n\n  // vs CPU functionality\n  const startGameCPU = () => {\n    setIsPlaying(true);\n    setIsRoundOver(false);\n    setVsCPU(true);\n    setCurrentPlayer(player1);\n    setNextPlayer(player2);\n    setPlayer2Name(\"Computer\");\n    setRound(1);\n  };\n\n  useEffect(() => {\n    if (vsCPU) {\n      if (turn % 2 === cpuTurnMod) {\n        setTimeout(() => {\n          let cpuMove = getCpuMove();\n          switch (cpuMove) {\n            case 0:\n              setPos_0(player2);\n              updateBoardAfterCPUmove(0);\n              break;\n            case 1:\n              setPos_1(player2);\n              updateBoardAfterCPUmove(1);\n              break;\n            case 2:\n              setPos_2(player2);\n              updateBoardAfterCPUmove(2);\n              break;\n            case 3:\n              setPos_3(player2);\n              updateBoardAfterCPUmove(3);\n              break;\n            case 4:\n              setPos_4(player2);\n              updateBoardAfterCPUmove(4);\n              break;\n            case 5:\n              setPos_5(player2);\n              updateBoardAfterCPUmove(5);\n              break;\n            case 6:\n              setPos_6(player2);\n              updateBoardAfterCPUmove(6);\n              break;\n            case 7:\n              setPos_7(player2);\n              updateBoardAfterCPUmove(7);\n              break;\n            case 8:\n              setPos_8(player2);\n              updateBoardAfterCPUmove(8);\n              break;\n            default:\n              return;\n          }\n        }, 800);\n      }\n      return;\n    }\n  }, [turn]);\n\n  const getCpuMove = () => {\n    let possibleMoves = [];\n    for (let i = 0; i < board.length; i++) {\n      if (board[i].mark === \"\") {\n        possibleMoves.push(i);\n      }\n    }\n    let randomIndex = Math.floor(Math.random() * possibleMoves.length);\n    return possibleMoves[randomIndex];\n  };\n\n  useEffect(() => {\n    if (vsCPU) {\n      setPlayer2Name(\"Computer\");\n      setCurrentPlayer(player1);\n      setNextPlayer(player2);\n      setMessage(`${player1.name}'s turn`);\n    } else {\n      setPlayer2Name(\"Player 2\");\n      setNextPlayer(player2);\n      setCurrentPlayer(player1);\n    }\n  }, [isPlaying]);\n\n  // change marker\n  const checkMarker = (id, newMark) => {\n    // check if the new marker for player 1 is already in use by player 2\n    if (id === 1) {\n      if (newMark.toLowerCase() === player2Marker.toLowerCase()) {\n        return;\n      } else {\n        setPlayer1Marker(newMark);\n      }\n    }\n\n    // check if the new marker for player 2 is already in use by player 1\n    if (id === 2) {\n      if (newMark.toLowerCase() === player1Marker.toLowerCase()) {\n        return;\n      } else {\n        setPlayer2Marker(newMark);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar resetGame={resetGame} />\n      {!isPlaying && (\n        <div className=\"menu\">\n          <div className=\"modal\">\n            <span className=\"title\">Let's Play</span>\n            <button className=\"human\" onClick={() => startGame()}>\n              vs Human\n            </button>\n            <button className=\"computer\" onClick={() => startGameCPU()}>\n              vs Computer\n            </button>\n          </div>\n        </div>\n      )}\n      {isRoundOver && isPlaying && (\n        <div className=\"shade\">\n          <div className=\"modal\">\n            <span className=\"title\">Continue?</span>\n            <p>{scoreboard}</p>\n            <button onClick={() => nextRound()}>Next Round</button>\n            <button className=\"quit\" onClick={() => resetGame()}>\n              Quit\n            </button>\n          </div>\n        </div>\n      )}\n      {isPlaying && (\n        <div className=\"content\">\n          <div className=\"players-container\">\n            <Player\n              player={player1}\n              setPlayerName={setPlayer1Name}\n              checkMarker={checkMarker}\n            />\n            <Player\n              player={player2}\n              setPlayerName={setPlayer2Name}\n              checkMarker={checkMarker}\n            />\n          </div>\n          <Message message={message} />\n          {/* keeps player from playing extra moves vs cpu */}\n          {vsCPU && turn % 2 === cpuTurnMod && <div className=\"cpu-turn\"></div>}\n          <Gameboard\n            board={board}\n            setBoard={setBoard}\n            currentPlayer={currentPlayer}\n            nextPlayer={nextPlayer}\n            nextTurn={nextTurn}\n            setPos_0={setPos_0}\n            setPos_1={setPos_1}\n            setPos_2={setPos_2}\n            setPos_3={setPos_3}\n            setPos_4={setPos_4}\n            setPos_5={setPos_5}\n            setPos_6={setPos_6}\n            setPos_7={setPos_7}\n            setPos_8={setPos_8}\n            checkWinner={checkWinner}\n            setMessage={setMessage}\n            endGame={endGame}\n          />\n          <span className=\"round\">Round {round}</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}